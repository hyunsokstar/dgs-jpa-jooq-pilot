/*
 * This file is generated by jOOQ.
 */
package nexus.jooq.generated.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import nexus.jooq.generated.tables.AgentCallTimeRecord;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AgentCallTimeRecordRecord extends TableRecordImpl<AgentCallTimeRecordRecord> implements Record11<Long, Long, Long, Long, LocalDateTime, Long, Long, Long, LocalDate, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.agent_call_time_record.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>public.agent_call_time_record.after_call_time_seconds</code>.
     */
    public void setAfterCallTimeSeconds(Long value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.agent_call_time_record.after_call_time_seconds</code>.
     */
    public Long getAfterCallTimeSeconds() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.agent_call_time_record.break_time_seconds</code>.
     */
    public void setBreakTimeSeconds(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.break_time_seconds</code>.
     */
    public Long getBreakTimeSeconds() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.agent_call_time_record.call_time_seconds</code>.
     */
    public void setCallTimeSeconds(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.call_time_seconds</code>.
     */
    public Long getCallTimeSeconds() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.agent_call_time_record.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for
     * <code>public.agent_call_time_record.inbound_time_seconds</code>.
     */
    public void setInboundTimeSeconds(Long value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>public.agent_call_time_record.inbound_time_seconds</code>.
     */
    public Long getInboundTimeSeconds() {
        return (Long) get(5);
    }

    /**
     * Setter for
     * <code>public.agent_call_time_record.outbound_time_seconds</code>.
     */
    public void setOutboundTimeSeconds(Long value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>public.agent_call_time_record.outbound_time_seconds</code>.
     */
    public Long getOutboundTimeSeconds() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.agent_call_time_record.ready_time_seconds</code>.
     */
    public void setReadyTimeSeconds(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.ready_time_seconds</code>.
     */
    public Long getReadyTimeSeconds() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.agent_call_time_record.record_date</code>.
     */
    public void setRecordDate(LocalDate value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.record_date</code>.
     */
    public LocalDate getRecordDate() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>public.agent_call_time_record.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.agent_call_time_record.user_id</code>.
     */
    public void setUserId(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.agent_call_time_record.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, Long, LocalDateTime, Long, Long, Long, LocalDate, LocalDateTime, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, Long, LocalDateTime, Long, Long, Long, LocalDate, LocalDateTime, Long> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.ID;
    }

    @Override
    public Field<Long> field2() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.AFTER_CALL_TIME_SECONDS;
    }

    @Override
    public Field<Long> field3() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.BREAK_TIME_SECONDS;
    }

    @Override
    public Field<Long> field4() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.CALL_TIME_SECONDS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.CREATED_AT;
    }

    @Override
    public Field<Long> field6() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.INBOUND_TIME_SECONDS;
    }

    @Override
    public Field<Long> field7() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.OUTBOUND_TIME_SECONDS;
    }

    @Override
    public Field<Long> field8() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.READY_TIME_SECONDS;
    }

    @Override
    public Field<LocalDate> field9() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.RECORD_DATE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.UPDATED_AT;
    }

    @Override
    public Field<Long> field11() {
        return AgentCallTimeRecord.AGENT_CALL_TIME_RECORD.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAfterCallTimeSeconds();
    }

    @Override
    public Long component3() {
        return getBreakTimeSeconds();
    }

    @Override
    public Long component4() {
        return getCallTimeSeconds();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public Long component6() {
        return getInboundTimeSeconds();
    }

    @Override
    public Long component7() {
        return getOutboundTimeSeconds();
    }

    @Override
    public Long component8() {
        return getReadyTimeSeconds();
    }

    @Override
    public LocalDate component9() {
        return getRecordDate();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdatedAt();
    }

    @Override
    public Long component11() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAfterCallTimeSeconds();
    }

    @Override
    public Long value3() {
        return getBreakTimeSeconds();
    }

    @Override
    public Long value4() {
        return getCallTimeSeconds();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public Long value6() {
        return getInboundTimeSeconds();
    }

    @Override
    public Long value7() {
        return getOutboundTimeSeconds();
    }

    @Override
    public Long value8() {
        return getReadyTimeSeconds();
    }

    @Override
    public LocalDate value9() {
        return getRecordDate();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdatedAt();
    }

    @Override
    public Long value11() {
        return getUserId();
    }

    @Override
    public AgentCallTimeRecordRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value2(Long value) {
        setAfterCallTimeSeconds(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value3(Long value) {
        setBreakTimeSeconds(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value4(Long value) {
        setCallTimeSeconds(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value6(Long value) {
        setInboundTimeSeconds(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value7(Long value) {
        setOutboundTimeSeconds(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value8(Long value) {
        setReadyTimeSeconds(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value9(LocalDate value) {
        setRecordDate(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value10(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord value11(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AgentCallTimeRecordRecord values(Long value1, Long value2, Long value3, Long value4, LocalDateTime value5, Long value6, Long value7, Long value8, LocalDate value9, LocalDateTime value10, Long value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AgentCallTimeRecordRecord
     */
    public AgentCallTimeRecordRecord() {
        super(AgentCallTimeRecord.AGENT_CALL_TIME_RECORD);
    }

    /**
     * Create a detached, initialised AgentCallTimeRecordRecord
     */
    public AgentCallTimeRecordRecord(Long id, Long afterCallTimeSeconds, Long breakTimeSeconds, Long callTimeSeconds, LocalDateTime createdAt, Long inboundTimeSeconds, Long outboundTimeSeconds, Long readyTimeSeconds, LocalDate recordDate, LocalDateTime updatedAt, Long userId) {
        super(AgentCallTimeRecord.AGENT_CALL_TIME_RECORD);

        setId(id);
        setAfterCallTimeSeconds(afterCallTimeSeconds);
        setBreakTimeSeconds(breakTimeSeconds);
        setCallTimeSeconds(callTimeSeconds);
        setCreatedAt(createdAt);
        setInboundTimeSeconds(inboundTimeSeconds);
        setOutboundTimeSeconds(outboundTimeSeconds);
        setReadyTimeSeconds(readyTimeSeconds);
        setRecordDate(recordDate);
        setUpdatedAt(updatedAt);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AgentCallTimeRecordRecord
     */
    public AgentCallTimeRecordRecord(nexus.jooq.generated.tables.pojos.AgentCallTimeRecord value) {
        super(AgentCallTimeRecord.AGENT_CALL_TIME_RECORD);

        if (value != null) {
            setId(value.getId());
            setAfterCallTimeSeconds(value.getAfterCallTimeSeconds());
            setBreakTimeSeconds(value.getBreakTimeSeconds());
            setCallTimeSeconds(value.getCallTimeSeconds());
            setCreatedAt(value.getCreatedAt());
            setInboundTimeSeconds(value.getInboundTimeSeconds());
            setOutboundTimeSeconds(value.getOutboundTimeSeconds());
            setReadyTimeSeconds(value.getReadyTimeSeconds());
            setRecordDate(value.getRecordDate());
            setUpdatedAt(value.getUpdatedAt());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
